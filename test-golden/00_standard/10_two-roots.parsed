title: Two Roots
========
[ ( Tangle
      { tangle'name = "func"
      , tangle'path = "func.c"
      , tangle'language = "cee"
      }
  , Literate
      1
      ( "func" , [] , [] )
      [ Code "int func(void) {\n    if (0 < 2) {\n        "
      , Include
          8
          (Literate
             2
             ( "hello" , [] , [] )
             [ Code "printf(\"Hello, %s!\\n\", \"World\");" ] :|
             [ Literate 3 ( "hello" , [] , [] ) [ Code "return 0;" ] ])
      , Code "\n    }\n}"
      ] :|
      []
  )
, ( Tangle
      { tangle'name = "main"
      , tangle'path = "main.c"
      , tangle'language = "cee"
      }
  , Literate
      0
      ( "main" , [] , [] )
      [ Code "int main(void) {\n    "
      , Include
          4
          (Literate
             2
             ( "hello" , [] , [] )
             [ Code "printf(\"Hello, %s!\\n\", \"World\");" ] :|
             [ Literate 3 ( "hello" , [] , [] ) [ Code "return 0;" ] ])
      , Code "\n}"
      ] :|
      []
  )
]
========
Pandoc
  Meta
    { unMeta =
        fromList
          [ ( "tangles"
            , MetaList
                [ MetaMap
                    (fromList
                       [ ( "language" , MetaInlines [ Str "cee" ] )
                       , ( "name" , MetaInlines [ Str "main" ] )
                       , ( "path" , MetaInlines [ Str "main.c" ] )
                       ])
                , MetaMap
                    (fromList
                       [ ( "language" , MetaInlines [ Str "cee" ] )
                       , ( "name" , MetaInlines [ Str "func" ] )
                       , ( "path" , MetaInlines [ Str "func.c" ] )
                       ])
                ]
            )
          , ( "title" , MetaInlines [ Str "Two" , Space , Str "Roots" ] )
          ]
    }
  [ CodeBlock
      ( "main" , [] , [ ( "literate-id" , "0" ) ] )
      "int main(void) {\n    <<hello>>\n}"
  , CodeBlock
      ( "func" , [] , [ ( "literate-id" , "1" ) ] )
      "int func(void) {\n    if (0 < 2) {\n        <<hello>>\n    }\n}"
  , CodeBlock
      ( "hello" , [] , [ ( "literate-id" , "2" ) ] )
      "printf(\"Hello, %s!\\n\", \"World\");"
  , CodeBlock
      ( "hello" , [] , [ ( "literate-id" , "3" ) ] ) "return 0;"
  ]
